/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LimitRanger,
  LimitRangerInterface,
} from "../../contracts/LimitRanger";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "_nonfungiblePositionManager",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Factory",
        name: "_uniswapV3Factory",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "_weth9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sellAbove",
        type: "bool",
      },
    ],
    name: "AddPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "CancelPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "DepositsActiveSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeReceiver",
        type: "address",
      },
    ],
    name: "FeeReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newFee",
        type: "uint16",
      },
    ],
    name: "MinimumFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "reward",
        type: "uint8",
      },
    ],
    name: "StopPositionRewardSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelPosition",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentMinFee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStopPositionReward",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getOwnedPositions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "int24",
            name: "sellTarget",
            type: "int24",
          },
          {
            internalType: "uint16",
            name: "fee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "sellAboveTarget",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "unwrapToNative",
            type: "bool",
          },
        ],
        internalType: "struct LimitRanger.PositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token0Amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Amount",
            type: "uint256",
          },
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "protocolFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "unwrapToNative",
            type: "bool",
          },
        ],
        internalType: "struct LimitRanger.MintParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "sellTarget",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "sellAboveTarget",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "unwrapToNative",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeReceiver",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "retrieveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveEth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "retrieveNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setDepositsActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
    ],
    name: "setMinimumFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "setProtocolFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "setProtocolOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "reward",
        type: "uint8",
      },
    ],
    name: "setStopPositionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stopPosition",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniNft",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth9",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162003191380380620031918339810160408190526200003591620000bd565b6001600160a01b03928316608081905291831660a05260e0919091521660c052600080546001600160a01b031916339081179091556001805461ffff60b01b1961ffff60a01b199093166001600160b01b031990911617600160a01b1791909116600160b81b17905562000111565b6001600160a01b0381168114620000ba57600080fd5b50565b600080600060608486031215620000d357600080fd5b8351620000e081620000a4565b6020850151909350620000f381620000a4565b60408501519092506200010681620000a4565b809150509250925092565b60805160a05160c05160e051612fcf620001c2600039600061068b01526000818161032601528181610ea401528181610ef4015281816112710152818161131d0152818161274a015281816127b20152818161287801526128fc0152600081816104a701528181610fe00152611f10015260008181610599015281816112e50152818161139a0152818161149401528181611c8d01528181611cfa0152818161218f01526122920152612fcf6000f3fe60806040526004361061018f5760003560e01c80637d64a448116100d6578063c9a973581161007f578063d619d21611610059578063d619d21614610664578063e671e1f414610679578063f275c0ce146106ad57600080fd5b8063c9a97358146105f1578063cd4e9ffa14610611578063ce1e09e01461063157600080fd5b8063b103dd29116100b0578063b103dd2914610567578063b44a272214610587578063c41a360a146105bb57600080fd5b80637d64a448146104f957806386d087fb14610519578063b0ec0c941461053a57600080fd5b806350879c1c116101385780635917fe5a116101125780635917fe5a146104755780635b549182146104955780637bcaa485146104c957600080fd5b806350879c1c146103145780635089cb2714610348578063519f50991461036857600080fd5b806339a51be51161016957806339a51be51461029f57806346877b1a146102bf5780634ab9bc80146102df57600080fd5b8063068a33361461019b5780630a1d7c5f146101d857806317893e3c146101fa57600080fd5b3661019657005b600080fd5b3480156101a757600080fd5b506000546101bb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101e457600080fd5b506101f86101f3366004612a11565b6106ce565b005b34801561020657600080fd5b5061025f610215366004612a11565b6002602081905260009182526040909120546001600160a01b03811691600160a01b8204900b9061ffff600160b81b8204169060ff600160c81b8204811691600160d01b90041685565b604080516001600160a01b03909616865260029490940b602086015261ffff9092169284019290925290151560608301521515608082015260a0016101cf565b3480156102ab57600080fd5b506001546101bb906001600160a01b031681565b3480156102cb57600080fd5b506101f86102da366004612a42565b610793565b3480156102eb57600080fd5b5060015461030190600160a01b900461ffff1681565b60405161ffff90911681526020016101cf565b34801561032057600080fd5b506101bb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561035457600080fd5b506101f8610363366004612a6e565b6108bf565b34801561037457600080fd5b5061041f610383366004612a11565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260026020818152604092839020835160a08101855290546001600160a01b0381168252600160a01b810490930b9181019190915261ffff600160b81b8304169281019290925260ff600160c81b8204811615156060840152600160d01b909104161515608082015290565b6040516101cf9190600060a0820190506001600160a01b038351168252602083015160020b602083015261ffff604084015116604083015260608301511515606083015260808301511515608083015292915050565b34801561048157600080fd5b506101f8610490366004612a42565b6109ed565b3480156104a157600080fd5b506101bb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d557600080fd5b506104e96104e4366004612a11565b610b12565b60405190151581526020016101cf565b34801561050557600080fd5b506101f8610514366004612a9b565b610b89565b61052c610527366004612ab8565b610c64565b6040519081526020016101cf565b34801561054657600080fd5b5061055a610555366004612a42565b611755565b6040516101cf9190612ad1565b34801561057357600080fd5b506101f8610582366004612a42565b6117c1565b34801561059357600080fd5b506101bb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105c757600080fd5b506101bb6105d6366004612a11565b6000908152600260205260409020546001600160a01b031690565b3480156105fd57600080fd5b506101f861060c366004612b23565b6118cc565b34801561061d57600080fd5b506104e961062c366004612a11565b6119a5565b34801561063d57600080fd5b5060015461065290600160b01b900460ff1681565b60405160ff90911681526020016101cf565b34801561067057600080fd5b506104e9611a69565b34801561068557600080fd5b506101bb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106b957600080fd5b506001546104e990600160b81b900460ff1681565b60008181526002602052604090205481906001600160a01b031633146107505760405162461bcd60e51b815260206004820152602c60248201527f4f7065726174696f6e206f6e6c7920616c6c6f77656420666f72206f776e657260448201526b1037b3103837b9b4ba34b7b760a11b60648201526084015b60405180910390fd5b61075a8233611b07565b60405182815233907faa1d04eb954a2b38e872304c999eb9f06b5f86621d9bc8a57eb4e66280005a969060200160405180910390a25050565b6000546001600160a01b031633146108045760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b6001600160a01b03811660000361085d5760405162461bcd60e51b815260206004820152601760248201527f3078302061646472657373206e6f7420616c6c6f7765640000000000000000006044820152606401610747565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d906020015b60405180910390a150565b6000546001600160a01b031633146109305760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b60648160ff1611156109845760405162461bcd60e51b815260206004820152601760248201527f726577617264203e313030206e6f7420616c6c6f7765640000000000000000006044820152606401610747565b600180547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b60ff8416908102919091179091556040519081527f34ccf789e3d35be7a0c07967faa3b53109194208c75d46bfaf8f14389ae26073906020016108b4565b6000546001600160a01b03163314610a5e5760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b6001600160a01b038116600003610ab75760405162461bcd60e51b815260206004820152601760248201527f3078302061646472657373206e6f7420616c6c6f7765640000000000000000006044820152606401610747565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f99d737e0adf2c449d71890b86772885ec7959b152ddb265f76325b6e68e105d3906020016108b4565b6000818152600260205260408120546001600160a01b031681610b36846001611cf0565b90508015610b8257816001600160a01b03167fd166759110875e7043f195882c2c5c5ae3e22d3bed496bb1da5b0a6efc1bbad685604051610b7991815260200190565b60405180910390a25b9392505050565b6000546001600160a01b03163314610bfa5760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b600180547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16600160a01b61ffff8416908102919091179091556040519081527f5fc7685da41ea37ba03394f9e2de6b67c85c29d24b740fbc171e960a2f74972f906020016108b4565b600154600090600160b81b900460ff16610cc05760405162461bcd60e51b815260206004820152601f60248201527f4465706f73697473206172652063757272656e746c792064697361626c6564006044820152606401610747565b8160e0013580421115610d155760405162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c64000000000000000000000000006044820152606401610747565b60408301351580610d2857506060830135155b610d9a5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e20616d6f756e74206f6620746f6b656e30206f7220746f6b656e3160448201527f206d7573742062652030000000000000000000000000000000000000000000006064820152608401610747565b600083604001351180610db1575060008360600135115b610dfd5760405162461bcd60e51b815260206004820152601460248201527f496e76616c696420746f6b656e20616d6f756e740000000000000000000000006044820152606401610747565b600154600160a01b900461ffff16610e1d61012085016101008601612a9b565b61ffff1610158015610e4657506101f4610e3f61012085016101008601612a9b565b61ffff1611155b610e925760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642070726f746f636f6c206665650000000000000000000000006044820152606401610747565b60003415610fd4576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610ed16020860186612a42565b6001600160a01b031603610eea57506040830135610f85565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610f246040860160208701612a42565b6001600160a01b031603610f3d57506060830135610f85565b60405162461bcd60e51b815260206004820152601360248201527f4d6573736167652076616c7565206e6f742030000000000000000000000000006044820152606401610747565b348114610fd45760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206d6573736167652076616c756500000000000000000000006044820152606401610747565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631698ee826110126020880188612a42565b6110226040890160208a01612a42565b61103260e08a0160c08b01612b51565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa1580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190612b7e565b90506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b9190612bb5565b50505050509150506000866040013511156111d05761115060a0870160808801612c51565b60020b8160020b13156111cb5760405162461bcd60e51b815260206004820152603660248201527f43757272656e74207072696365206f6620706f6f6c20646f65736e2774206d6160448201527f74636820646573697265642073656c6c2072616e6765000000000000000000006064820152608401610747565b61125b565b6111e060c0870160a08801612c51565b60020b8160020b121561125b5760405162461bcd60e51b815260206004820152603660248201527f43757272656e74207072696365206f6620706f6f6c20646f65736e2774206d6160448201527f74636820646573697265642073656c6c2072616e6765000000000000000000006064820152608401610747565b5050604084013515611313576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661129e6020860186612a42565b6001600160a01b03161415806112b2575080155b1561130e576112d36112c76020860186612a42565b3330876040013561239c565b61130e6112e36020860186612a42565b7f000000000000000000000000000000000000000000000000000000000000000086604001356124d9565b6113c3565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661134d6040860160208701612a42565b6001600160a01b0316141580611361575080155b156113c3576113856113796040860160208701612a42565b3330876060013561239c565b6113c36113986040860160208701612a42565b7f000000000000000000000000000000000000000000000000000000000000000086606001356124d9565b604080516101608101909152600090806113e06020880188612a42565b6001600160a01b031681526020018660200160208101906114019190612a42565b6001600160a01b0316815260200161141f60e0880160c08901612b51565b62ffffff16815260200161143960a0880160808901612c51565b60020b815260200161145160c0880160a08901612c51565b60020b815260200186604001358152602001866060013581526020016000815260200160008152602001306001600160a01b0316815260200142815250905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638831645684846040518363ffffffff1660e01b81526004016114df9190612c6e565b60806040518083038185885af11580156114fd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906115229190612d52565b509196509150506040860135156116cb576116c68561154760c0890160a08a01612c51565b60013361155c6101208c016101008d01612a9b565b61156e6101408d016101208e01612b23565b6040805160a0810182526001600160a01b03948516808252600297880b602080840191825261ffff968716848601908152981515606085019081529515156080850190815260008c81529a8252858b209451855493519a51975191511515600160d01b027fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff921515600160c81b027fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff99909a16600160b81b02989098167fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff62ffffff909c16600160a01b027fffffffffffffffffff000000000000000000000000000000000000000000000090951691909a1617929092179890981696909617949094179490941691909117909255835260038252808320805460018101825590845282842081018590559383526004909152902055565b6116f4565b6116f4856116df60a0890160808a01612c51565b60003361155c6101208c016101008d01612a9b565b604080518681526fffffffffffffffffffffffffffffffff8316602082015287820135151581830152905133917f84857eda562bb68e0b47f5fdb7037e19a483b460c88f0399b98c01d91ac7b1f9919081900360600190a250505050919050565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156117b557602002820191906000526020600020905b8154815260200190600101908083116117a1575b50505050509050919050565b6000546001600160a01b031633146118325760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015282916118c89183916001600160a01b0390811691908316906370a0823190602401602060405180830381865afa15801561189f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c39190612d8e565b61260d565b5050565b6000546001600160a01b0316331461193d5760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b60018054821515600160b81b027fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff9091161790556040517f1117e04c4b9c84c94ec4def2d3be770c1de27588c20313630309abe93ebd6651906108b490831515815260200190565b60008181526002602052604081205482906001600160a01b03163314611a225760405162461bcd60e51b815260206004820152602c60248201527f4f7065726174696f6e206f6e6c7920616c6c6f77656420666f72206f776e657260448201526b1037b3103837b9b4ba34b7b760a11b6064820152608401610747565b6000611a2f846000611cf0565b90508015610b825760405184815233907f1efe7349ed20ea755a19f4f0d5beec843d0d1c73eeb8d60e53fa7eb2537e231b90602001610b79565b600080546001600160a01b03163314611adb5760405162461bcd60e51b815260206004820152602e60248201527f4f70657261746f6e206f6e6c7920616c6c6f77656420666f72206f706572617460448201526d1bdc881bd98818dbdb9d1c9858dd60921b6064820152608401610747565b6001546040516001600160a01b03909116904780156108fc02916000818181858888f194505050505090565b600082815260026020908152604080832080547fffffffffff00000000000000000000000000000000000000000000000000000016905560048252808320546001600160a01b03851684526003909252822054909190611b6990600190612dbd565b6001600160a01b03841660009081526003602052604081208054929350909183908110611b9857611b98612dd0565b906000526020600020015490508060036000866001600160a01b03166001600160a01b031681526020019081526020016000208481548110611bdc57611bdc612dd0565b60009182526020808320909101929092556001600160a01b0386168152600390915260409020805480611c1157611c11612de6565b60008281526020808220600019908401810183905590920190925586825260049081905260408083208390558383529182902085905590517f42842e0e00000000000000000000000000000000000000000000000000000000815230918101919091526001600160a01b038581166024830152604482018790527f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90606401600060405180830381600087803b158015611cd157600080fd5b505af1158015611ce5573d6000803e3d6000fd5b505050505050505050565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399fbab88886040518263ffffffff1660e01b8152600401611d4691815260200190565b61018060405180830381865afa158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d889190612e07565b505050509750505095509550955050506000600260008981526020019081526020016000206040518060a00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900461ffff1661ffff1661ffff1681526020016000820160199054906101000a900460ff1615151515815260200160008201601a9054906101000a900460ff161515151581525050905060006001600160a01b031681600001516001600160a01b031603611ec25760405162461bcd60e51b815260206004820152601260248201527f506f736974696f6e206e6f7420666f756e6400000000000000000000000000006044820152606401610747565b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152858116602483015262ffffff851660448301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa158015611f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7d9190612b7e565b90508715612102576000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611fc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe99190612bb5565b505050505091505082606001511561208057826020015160020b8160020b121561207b5760405162461bcd60e51b815260206004820152603d60248201527f53656c6c20746172676574206e6f7420726561636865642e2043757272656e7460448201527f207469636b2062656c6f772073656c6c20746172676574207469636b2e0000006064820152608401610747565b612100565b826020015160020b8160020b13156121005760405162461bcd60e51b815260206004820152603d60248201527f53656c6c20746172676574206e6f7420726561636865642e2043757272656e7460448201527f207469636b2061626f76652073656c6c20746172676574207469636b2e0000006064820152608401610747565b505b6040805160a0810182528a81526fffffffffffffffffffffffffffffffff85811660208301908152600083850181815260608501918252426080860190815295517f0c49ccbe0000000000000000000000000000000000000000000000000000000081528551600482015292519093166024830152915160448201529051606482015291516084830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630c49ccbe9060a40160408051808303816000875af11580156121df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122039190612ee8565b5050604080516080810182528b815230602082019081526fffffffffffffffffffffffffffffffff8284018181526060840182815294517ffc6f78650000000000000000000000000000000000000000000000000000000081528451600482015292516001600160a01b03908116602485015290518216604484015293511660648201529093506000925082917f0000000000000000000000000000000000000000000000000000000000000000169063fc6f78659060840160408051808303816000875af11580156122da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fe9190612ee8565b915091506000808b1561234f57604086015161ffff166123206103e886612f0c565b61232a9190612f2e565b604087015190925061ffff166123426103e885612f0c565b61234c9190612f2e565b90505b61236484838c89600001518a6080015161273a565b61237983828b89600001518a6080015161273a565b6123878d8760000151611b07565b50505050506001955050505050505b92915050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916124199190612f4d565b6000604051808303816000865af19150503d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b606091505b50915091508180156124855750805115806124855750808060200190518101906124859190612f7c565b6124d15760405162461bcd60e51b815260206004820152600360248201527f53544600000000000000000000000000000000000000000000000000000000006044820152606401610747565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b300000000000000000000000000000000000000000000000000000000179052915160009283929087169161254e9190612f4d565b6000604051808303816000865af19150503d806000811461258b576040519150601f19603f3d011682016040523d82523d6000602084013e612590565b606091505b50915091508180156125ba5750805115806125ba5750808060200190518101906125ba9190612f7c565b6126065760405162461bcd60e51b815260206004820152600260248201527f53410000000000000000000000000000000000000000000000000000000000006044820152606401610747565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916126829190612f4d565b6000604051808303816000865af19150503d80600081146126bf576040519150601f19603f3d011682016040523d82523d6000602084013e6126c4565b606091505b50915091508180156126ee5750805115806126ee5750808060200190518101906126ee9190612f7c565b6126065760405162461bcd60e51b815260206004820152600260248201527f53540000000000000000000000000000000000000000000000000000000000006044820152606401610747565b841561283f5780801561277e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b15612830576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156127fe57600080fd5b505af1158015612812573d6000803e3d6000fd5b5050505061282b8285876128269190612dbd565b61294f565b61283f565b61283f83836118c38789612dbd565b83156126065760015460009060649061286290600160b01b900460ff1687612f2e565b61286c9190612f0c565b90508180156128ac57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b156128d0576001546128cb906001600160a01b03166128268388612dbd565b6128ec565b6001546128ec9085906001600160a01b03166118c38489612dbd565b80156124d15781801561293057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b156129445761293f338261294f565b6124d1565b6124d184338361260d565b604080516000808252602082019092526001600160a01b0384169083906040516129799190612f4d565b60006040518083038185875af1925050503d80600081146129b6576040519150601f19603f3d011682016040523d82523d6000602084013e6129bb565b606091505b5050905080612a0c5760405162461bcd60e51b815260206004820152600360248201527f53544500000000000000000000000000000000000000000000000000000000006044820152606401610747565b505050565b600060208284031215612a2357600080fd5b5035919050565b6001600160a01b0381168114612a3f57600080fd5b50565b600060208284031215612a5457600080fd5b8135610b8281612a2a565b60ff81168114612a3f57600080fd5b600060208284031215612a8057600080fd5b8135610b8281612a5f565b61ffff81168114612a3f57600080fd5b600060208284031215612aad57600080fd5b8135610b8281612a8b565b60006101408284031215612acb57600080fd5b50919050565b6020808252825182820181905260009190848201906040850190845b81811015612b0957835183529284019291840191600101612aed565b50909695505050505050565b8015158114612a3f57600080fd5b600060208284031215612b3557600080fd5b8135610b8281612b15565b62ffffff81168114612a3f57600080fd5b600060208284031215612b6357600080fd5b8135610b8281612b40565b8051612b7981612a2a565b919050565b600060208284031215612b9057600080fd5b8151610b8281612a2a565b8060020b8114612a3f57600080fd5b8051612b7981612b9b565b600080600080600080600060e0888a031215612bd057600080fd5b8751612bdb81612a2a565b6020890151909750612bec81612b9b565b6040890151909650612bfd81612a8b565b6060890151909550612c0e81612a8b565b6080890151909450612c1f81612a8b565b60a0890151909350612c3081612a5f565b60c0890151909250612c4181612b15565b8091505092959891949750929550565b600060208284031215612c6357600080fd5b8135610b8281612b9b565b81516001600160a01b0316815261016081016020830151612c9a60208401826001600160a01b03169052565b506040830151612cb1604084018262ffffff169052565b506060830151612cc6606084018260020b9052565b506080830151612cdb608084018260020b9052565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151612d21828501826001600160a01b03169052565b505061014092830151919092015290565b80516fffffffffffffffffffffffffffffffff81168114612b7957600080fd5b60008060008060808587031215612d6857600080fd5b84519350612d7860208601612d32565b6040860151606090960151949790965092505050565b600060208284031215612da057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561239657612396612da7565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b8051612b7981612b40565b6000806000806000806000806000806000806101808d8f031215612e2a57600080fd5b8c516bffffffffffffffffffffffff81168114612e4657600080fd5b9b50612e5460208e01612b6e565b9a50612e6260408e01612b6e565b9950612e7060608e01612b6e565b9850612e7e60808e01612dfc565b9750612e8c60a08e01612baa565b9650612e9a60c08e01612baa565b9550612ea860e08e01612d32565b94506101008d015193506101208d01519250612ec76101408e01612d32565b9150612ed66101608e01612d32565b90509295989b509295989b509295989b565b60008060408385031215612efb57600080fd5b505080516020909101519092909150565b600082612f2957634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612f4857612f48612da7565b500290565b6000825160005b81811015612f6e5760208186018101518583015201612f54565b506000920191825250919050565b600060208284031215612f8e57600080fd5b8151610b8281612b1556fea26469706673582212201c1d54174c17aef9f9e3a36d53292673f1514d248e0e4d58a14727524cf7a0c764736f6c63430008100033";

type LimitRangerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitRangerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitRanger__factory extends ContractFactory {
  constructor(...args: LimitRangerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nonfungiblePositionManager: PromiseOrValue<string>,
    _uniswapV3Factory: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LimitRanger> {
    return super.deploy(
      _nonfungiblePositionManager,
      _uniswapV3Factory,
      _weth9,
      overrides || {}
    ) as Promise<LimitRanger>;
  }
  override getDeployTransaction(
    _nonfungiblePositionManager: PromiseOrValue<string>,
    _uniswapV3Factory: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nonfungiblePositionManager,
      _uniswapV3Factory,
      _weth9,
      overrides || {}
    );
  }
  override attach(address: string): LimitRanger {
    return super.attach(address) as LimitRanger;
  }
  override connect(signer: Signer): LimitRanger__factory {
    return super.connect(signer) as LimitRanger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitRangerInterface {
    return new utils.Interface(_abi) as LimitRangerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitRanger {
    return new Contract(address, _abi, signerOrProvider) as LimitRanger;
  }
}
